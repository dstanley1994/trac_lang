#!/usr/bin/env ruby

$:.unshift File.dirname(__FILE__) + '/../lib'
require 'optparse'
require 'trac_lang'

USAGE_INSTRUCTIONS = ''
  
def parse_options
  options = {}
  op = OptionParser.new do |opt|
    opt.banner = 'Usage: trac_lang [OPTIONS] file1.trl file2.trl...'
    options[:save_dir] = Dir.pwd
    options[:save_dir] = ENV['TRAC-HOME'] if ENV['TRAC-HOME']
    opt.on('-d', '--save-dir', 'Directory to save TRAC blocks to') do |dir|
      options[:save_dir] = dir
    end
    exit_on_eof = false
    opt.on('-x', '--exit-on-eof', 'Exit when finished processing files') do
      options[:exit_on_eof] = true
    end
    options[:trace] = false
    opt.on('-t', '--trace', 'Turn on trace') do
      options[:trace] = true
    end
    opt.on( '-h', '--help', 'Display this screen' ) do
      puts opt
      exit
    end
  end
  USAGE_INSTRUCTIONS << op.to_s
  op.parse!
  options
end

def print_error(error)
  case error
  when OptionParser::InvalidOption
    puts "trac_lang: illegal option #{error.args.join(' ')}"
    puts USAGE_INSTRUCTIONS
  else
    puts "An unexpected error occured while running TRAC Lang"
    puts "  #{error}\n"
  end
end

begin 
  d = TracLang::Dispatch.new(parse_options)
  e = TracLang::Executor.new(d)
  catch :done do
    last_file = ''
    last_line = 0
    current_line = 1
    ARGF.each_line do |line|
      if ARGF.filename != last_file
        e.restore_dir unless last_file.empty?
        e.save_dir(ARGF.filename)
        current_line = 1
        last_file = ARGF.filename
      else
        current_line += 1
      end
      e.load(ARGF.filename, current_line, line)
    end
    exit if parse_options[:exit_on_eof]
    e.restore_dir
    e.prompt
  end
  puts 'Exiting...'
  puts
rescue => error
  print_error(error)
  exit(false)
end
